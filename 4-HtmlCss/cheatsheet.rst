==========================
Html5 + CSS3 CheatSheet整理
==========================

Html5和Css3是万维网标准通用标记语言下的一个应用超文本标记语言的第5次修改，相比于html4增添了许多新特性。为了应付俞老师课上的考试，我们不说互联网和万维网的起源、原理啥的，直接写一些我认为考试会用到的东西吧（肯定会有遗漏，请大家补充～


网页模版
=======

每个网页都包含html、head、title、meta和body元素。一般创建网页的前几行都是一样的:

::

    .. <!DOCTYPE html> //html5文档类型声明

        <html lang="en"> //语言设置

        <head>

        <title>html标题</title>

        <meta charset = "utf-8">编码格式

        <link rel= "stylesheet" type="text/css" href="css.css"/> 
        //如有css文件，可通过此语句引入使用。（链接路径可自行修改）

        </head>


常用标签(以下标签均为封闭标签)
========================
#. 标题：  <h1>, <h2>, <h3>, <h4>, <h5>, <h6>
#. 段落： <p>
#. 换行： <br>
#. 水平线： <hr>
#. 块引用： <blockquote> 使用时，文本会被缩进

+----------+-----------------------+
排版标记     |                       |
+----------+-----------------------+
<p>        |段落标记    
+----------+-----------------------+
<br>        |换行标记  
+----------+-----------------------+
<hr>    ○   水平线 插入一水平线   
+----------+-----------------------+
<CENTER>    ●   居中  令字、图、表格等显示于中间   反对
+----------+-----------------------+
<PRE>   ●   预设格式    令文件按原代码的排列方式显示 
+----------+-----------------------+  
<DIV>   ●   定位标记    设定字、图、表格等的摆放位置
+----------+-----------------------+   
<NOBR>  ●   不换行 令文字不因太长而换行 
+----------+-----------------------+  
<WBR>   ●   建议换行    预设换行部位  +----------+-----------------------+ 
字体标记
+----------+-----------------------+
<STRONG>    ●   加重语气    产生字体加粗 Bold 的效果  
+----------+-----------------------+
<B> ●   粗体标记    产生字体加粗的效果 
+----------+-----------------------+   
<EM>    ●   强调标记    字体出现斜体效果 
+----------+-----------------------+    
<I> ●   斜体标记    字体出现斜体效果  
+----------+-----------------------+   
<TT>    ●   等宽字体    Courier字体，字母宽度相同 
+----------+-----------------------+    
<U> ●   加下划线    加下划线    反对
+----------+-----------------------+
<H1>    ●   一级标题标记  将字体变大，级数越高越小 
+----------+-----------------------+    
<H2>    ●   二级标题标记  将字体变大    
<H3>    ●   三级标题标记  将字体变大    
<H4>    ●   四级标题标记  将字体变大    
<H5>    ●   五级标题标记  将字体变大    
<H6>    ●   六级标题标记  将字体变大    
<FONT>  ●   字体标记    设定字体、大小、颜色  反对
<BASEFONT>  ○   基准字体标记  设定所有字体、大小、颜色    反对
<BIG>   ●   字体加大    令字体稍微变大  
<SMALL> ●   字体缩小    令字体稍微缩小  
<STRIKE>    ●   加删除线    为文字加删除线 反对
<CODE>  ●   程式码 字体稍微加宽如<TT>  
<KBD>   ●   键盘字 字体稍微加宽，单一空白  
<SAMP>  ●   范例  字w稍榧如<TT>    
<VAR>   ●   变量  斜体效果     
<CITE>  ●   斜体标记    斜体效果     
<BLOCKQUOTE>    ●   向右缩排    文字向右缩排   
<DFN>   ●   述语定义    斜体效果     
<ADDRESS>   ●   地址标记    斜体效果     
<SUB>   ●   下标字 文字下标     
<SUP>   ●   上标字 文字上标     
清单标记
<OL>    ●   顺序清单    清单项目将以数字、字母顺序排列  
<UL>    ●   无序清单    清单项目将以实心圆点作为符号排列     
<LI>    ○   清单项目    清单中的项目，一个标记一行    
<MENU>  ●   选项清单    可用type参数指定项目符号。 反对
<DIR>   ●   目录清单    与<menu>相同   反对
<DL>    ●   定义清单    清单分两层出现  
<DT>    ○   定义条目    清单项标题    
<DD>    ○   定义内容    清单项内容    
表格标记
<TABLE> ●   表格标记    设定该表格的各项参数   
<CAPTION>   ●   表格标题    做成一打通列以填入表格标题    
<TR>    ●   表格列 设定该表格的列  
<TD>    ●   表格栏 设定该表格的栏  
<TH>    ●   表格标头    相等于<TD>，但其内文字字体会变粗   
表单标记
<FORM>  ●   表单标记    决定该表单的运作模式   
<TEXTAREA>  ●   文字框 提供文字输入栏  
<INPUT> ○   输入标记    决定输入形式   
<SELECT>    ●   选择标记    建立弹出卷动清单     
<OPTION>    ○   选项  每一个清单选项  
图形标记
<IMG>   ○   图形标记    用来插入图形及设定图形属性    
链接标记
<A> ●   链接标记    加入链接     
<BASE>  ○   基准标记    可将相对 URL 转绝对及指定链接    
框架标记
<FRAMESET>  ●   框架设定    设定框架     
<FRAME> ○   窗口设定    设定框架中的窗口     
<IFRAME>    ○   页内框架    于网页中插入框架    IE
<NOFRAMES>  ●   不支持框架   设定浏览器不支持框架时的提示   
影像地图
<MAP>   ●   影像地图名称  设定影像地图名称     
<AREA>  ○   链接区域    设定各链接区域  
多媒体
<BGSOUND>   ○   背景声音    令背景播放音乐或声音  IE
<EMBED> ○   多媒体 加入声音、音乐或影像   
其他标记
<MARQUEE>   ●   走马灯 令文字走动   IE
<BLINK> ●   闪烁文字    令文字闪烁   NC
<ISINDEX>   ○   页内寻找器   可输入关键字寻找该页  反对
<META>  ○   开头说明    提供关于此页的信息给浏览器    
<LINK>  ○   关系定义    定义该文件与其他 URL 的关系     
StyleSheet
<STYLE> ●   式样表 控制网页版面   
<span>  ●   自订标记    独立使用或与样式表一起用



快速新建项目（以Mac系统为例，Window系统类似）
======================================================
#. 在桌面上创建一个文件夹，并命名为 *sphinx-demo*
#. 在Terminal中浏览至上述文件夹，并运行命令： ``sphinx-quickstart``
#. 在对话框式的选择中，Y/N的选项，选Y；如果询问配置，直接复制[]中的内容，如[.rst]，则填写.rst
#. 新建成功后，则会得到如图所示的文件夹结构

.. image:: images/sphinx-dir.png
    :height: 200px
    :width: 400 px
    :alt: sphinx安装后的目录结构
    




往项目中添加内容
============================
#. 浏览至 *source* 文件夹，并在其根目录下创建新文件夹demo
#. 在上方 *demo* 文件夹中，新建test.rst文件，并在其中输入如下内容：

::

        =======================
        这是Sphinx的测试
        =======================
        我爱学习Sphinx

#. 打开source文件中的 index.rst，将test.rst的文件添加至目录中，具体如下：

    .. image:: images/add-toctree.png
        :height: 200px
        :width: 400 px
        :alt: 添加至首页目录
        
        
#. 在Terminal中运行编译命令 ``sphinx-build -b html source build``

#. 编译成功的话，在 *build* 文件夹中则有刚才发布的网站



修改主题
===================
#. 打开 *source* 文件夹中的conf.py，并找到主题配置行 html_theme = 'alabaster'
#. 从内置主题中挑选需要的主题，如 bizstyle，将其改为 html_theme = 'bizstyle'
#. 重新运行发布命令后，则可得到新主题的样式的帮助文档

.. note::
    Sphinx内置主题的样式可见：http://www.sphinx-doc.org/en/master/theming.html#using-a-theme。还可以安装其他主题，或者按照需要制作自己的主题。




安装ReadtheDoc同款主题
===========================

如果喜欢 `readthedocs.org <https://docs.readthedocs.io/en/latest/getting_started.html>`_ 的主题，可以按照如下方式安装

.. code-block:: python

    pip install sphinx_rtd_theme

安装之后，再按照上述步骤，将 ``conf.py`` 中的主题行，修改为html_theme = 'sphinx_rtd_theme'，再运行 ``sphinx-build`` 命令重新发布即可。

实现帮助文档公网可访问
==========================
执行 ``sphinx-build`` 命令后，sphinx会将rst的内容，发布为静态网站。只需将 *build* 文件夹中的文件，托管至github，即可实现公网访问。


由ReadtheDocs执行发布命令
===============================
每次更新后，都需执行 ``sphinx-build`` 命令，并重新上传至Github，较为麻烦。这个工作可以由ReadTheDocs平台自动化完成。

#. 注册ReadTheDocs账号
#. 将Github账号关联到ReadtheDocs
#. 将source文件中的内容，上传至github中的某个repo中
#. 选择github的相应ropo，自动创建webhook
#. 后续每次源文件内容有变化后，ReadtheDoc均可以自动发布最新的版本

更多内容参见ReadtheDocs官方文档：https://docs.readthedocs.io/en/latest/getting_started.html

**下次课内容**

* reStructedText 
* 自定义主题
* 制作主题
* 发布为PDF等其他样式
 
预习：

* HTML，CSS
* Jinjia 模板语言

**参考资料**

[Sphinx官方教程]: http://www.sphinx-doc.org/en/master/usage/quickstart.html